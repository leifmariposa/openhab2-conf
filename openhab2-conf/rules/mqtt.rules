// Electricity
rule "Watt"
when
  Item eletricity changed
then
  var String power  = transform("JSONPATH", "$.Watt", (eletricity.state).toString)
  eletricity_consumption.postUpdate(power)

  var String kwh  = transform("JSONPATH", "$.kWh", (eletricity.state).toString)
  kwh_current.postUpdate((kwh).toString)
end

rule "kWh"
when
  Item kwh_current changed
then
  var date	= now.getDayOfMonth
  var month	= now.getMonthOfYear

  if (kwh_at_midnight.state === NULL) {
    kwh_at_midnight.postUpdate((kwh_current.state).toString)
  }
  if (kwh_at_new_month.state === NULL) {
    kwh_at_new_month.postUpdate((kwh_current.state).toString)
  }

  if (current_date.state != date) {
    current_date.postUpdate((date).toString)

    if (kwh_four_days_ago.state != NULL) {
      kwh_five_days_ago.postUpdate((kwh_four_days_ago.state as Number).toString);
    }

    if (kwh_three_days_ago.state != NULL) {
      kwh_four_days_ago.postUpdate((kwh_three_days_ago.state as Number).toString);
    }

    if (kwh_two_days_ago.state != NULL) {
      kwh_three_days_ago.postUpdate((kwh_two_days_ago.state as Number).toString);
    }

    if (kwh_yesterday.state != NULL) {
      kwh_two_days_ago.postUpdate((kwh_yesterday.state as Number).toString);
    }

    kwh_yesterday.postUpdate(((kwh_current.state as Number) - (kwh_at_midnight.state as Number)).toString)
    kwh_at_midnight.postUpdate((kwh_current.state).toString)
  }

  if (current_month.state != month) {
    current_month.postUpdate((month).toString)

    kwh_last_month.postUpdate(((kwh_current.state as Number) - (kwh_at_new_month.state as Number)).toString)
    kwh_at_new_month.postUpdate((kwh_current.state).toString)
  }

  kwh_today.postUpdate(((kwh_current.state as Number) - (kwh_at_midnight.state as Number)).toString)
  kwh_month.postUpdate(((kwh_current.state as Number) - (kwh_at_new_month.state as Number)).toString)

  energy_cost_today.postUpdate((kwh_today.state as Number) * 2.0) // 2.0 Skr/kWh

  //logInfo('logTime', 'kwh_current: ' + kwh_current.state + ', kwh_today: ' + kwh_today.state + ', kwh_month: ' + kwh_month.state + ', kwh_at_midnight: ' + kwh_at_midnight.state + ', kwh_at_new_month: ' + kwh_at_new_month.state)
end

// TV livingroom
rule "TV power on"
when
  Item tv_power_on received command ON
then
  publish("broker", "broadlink/tv/samsung/poweron", "replay")
end

rule "TV power off"
when
  Item tv_power_off received command ON
then
  publish("broker", "broadlink/tv/samsung/poweroff", "replay")
end

rule "TV volume up"
when
  Item tv_volume_up received command ON
then
  publish("broker", "broadlink/tv/samsung/volumeup", "replay")
end

rule "TV volume down"
when
  Item tv_volume_down received command ON
then
  publish("broker", "broadlink/tv/samsung/volumedown", "replay")
end

// LG
rule "LG power"
when
  Item lg_power received command ON
then
  publish("broker", "broadlink/audio/lg/power", "replay")
end

rule "LG volume up"
when
  Item lg_volume_up received command ON
then
  publish("broker", "broadlink/audio/lg/volumeup", "replay")
end

rule "LG volume down"
when
  Item lg_volume_down received command ON
then
  publish("broker", "broadlink/audio/lg/volumedown", "replay")
end
