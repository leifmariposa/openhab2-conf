var Number prev_ac_setpoint = 0.0
var String prev_ac_mode = ""

// Test
rule "MQTT Test"
when
  Item mqtt_test received command ON
then
  logInfo('logTime', 'broadlink/tv/samsung/poweron')
  publish("broker", "broadlink/tv/samsung/poweron", "replay")
end


rule "Temperature_rule"
when
  Time cron "0 0 * ? * *" or Item LivingRoomThermostatSetpoint changed
then
/*  if (LivingRoomThermostatMode.state === NULL) {
    LivingRoomThermostatMode.postUpdate("off")
  }
  if (LivingRoomThermostatSetpoint.state === NULL) {
    LivingRoomThermostatSetpoint.postUpdate(21.0)
  }
  if (Netatmo_Indoor_Temperature.state === NULL) {
    return
  }
  if (Netatmo_Outdoor_Temperature.state === NULL) {
    return
  }

  var String ac_mode = LivingRoomThermostatMode.state.toString()
  var Number indoor_temperature = ((Netatmo_Indoor_Temperature.state) as Number).floatValue
  var Number outdoor_temperature = ((Netatmo_Outdoor_Temperature.state) as Number).floatValue
  var Number thermostat_setpoint = ((LivingRoomThermostatSetpoint.state) as Number).floatValue
  var Number indoor_temperature_factor = 2.5
  var Number outdoor_temperature_factor = 0.05
  var Number ac_setpoint

  if (ac_mode != prev_ac_mode) {
    prev_ac_mode = ac_mode
    if (ac_mode == "off") {
      logInfo('logTime', 'sending ac/sharp/off')
      publish("broker", "broadlink/ac/sharp/off", "replay")
    }
  }

  if (ac_mode == "off") {
    logInfo('logTime',
            'ac mode: ' + ac_mode)
  } else if (ac_mode == "heat") {
    ac_setpoint = (thermostat_setpoint +
                  (22.0 - indoor_temperature) * indoor_temperature_factor +
                  (15.0 - outdoor_temperature) * outdoor_temperature_factor).intValue;

    logInfo('logTime',
            'ac mode: ' + ac_mode +
            ', thermostat setpoint: ' + thermostat_setpoint.toString() +
            ', indoor temperature: ' + indoor_temperature.toString() +
            ', outdoor temperature ' + outdoor_temperature.toString() +
            ', ac setpoint: ' + ac_setpoint.toString())
    if (ac_setpoint != prev_ac_setpoint) {
      prev_ac_setpoint = ac_setpoint
      if (ac_setpoint <= 18) {
        logInfo('logTime', 'sending ac/sharp/heat_auto_18')
        publish("broker", "broadlink/ac/sharp/heat_auto_18", "replay")
      } else if (ac_setpoint <= 19) {
        logInfo('logTime', 'sending ac/sharp/heat_auto_19')
        publish("broker", "broadlink/ac/sharp/heat_auto_19", "replay")
      } else if (ac_setpoint <= 20) {
        logInfo('logTime', 'sending ac/sharp/heat_auto_20')
        publish("broker", "broadlink/ac/sharp/heat_auto_20", "replay")
      } else if (ac_setpoint <= 21) {
        logInfo('logTime', 'sending ac/sharp/heat_auto_21')
        publish("broker", "broadlink/ac/sharp/heat_auto_21", "replay")
      } else if (ac_setpoint <= 22) {
        logInfo('logTime', 'sending ac/sharp/heat_auto_22')
        publish("broker", "broadlink/ac/sharp/heat_auto_22", "replay")
      } else if (ac_setpoint <= 23) {
        logInfo('logTime', 'sending ac/sharp/heat_auto_23')
        publish("broker", "broadlink/ac/sharp/heat_auto_23", "replay")
      } else if (ac_setpoint <= 24) {
        logInfo('logTime', 'sending ac/sharp/heat_auto_24')
        publish("broker", "broadlink/ac/sharp/heat_auto_24", "replay")
      } else if (ac_setpoint <= 25) {
        logInfo('logTime', 'sending nothing')
        //logInfo('logTime', 'sending ac/sharp/heat_auto_25')
        //publish("broker", "broadlink/ac/sharp/heat_auto_25", "replay")
      } else if (ac_setpoint <= 26) {
        logInfo('logTime', 'sending ac/sharp/heat_auto_26')
        publish("broker", "broadlink/ac/sharp/heat_auto_26", "replay")
      } else {
        logInfo('logTime', 'sending ac/sharp/heat_auto_27')
        publish("broker", "broadlink/ac/sharp/heat_auto_27", "replay")
      }
      AcSetpoint.postUpdate(ac_setpoint)
    }
  }*/
end

// TV livingroom
rule "TV power on"
when
  Item tv_power_on received command ON
then
  publish("broker", "broadlink/tv/samsung/poweron", "replay")
end

rule "TV power off"
when
  Item tv_power_off received command ON
then
  publish("broker", "broadlink/tv/samsung/poweroff", "replay")
end

rule "TV volume up"
when
  Item tv_volume_up received command ON
then
  publish("broker", "broadlink/tv/samsung/volumeup", "replay")
end

rule "TV volume down"
when
  Item tv_volume_down received command ON
then
  publish("broker", "broadlink/tv/samsung/volumedown", "replay")
end

// LG
rule "LG power"
when
  Item lg_power received command ON
then
  publish("broker", "broadlink/audio/lg/power", "replay")
end

rule "LG volume up"
when
  Item lg_volume_up received command ON
then
  publish("broker", "broadlink/audio/lg/volumeup", "replay")
end

rule "LG volume down"
when
  Item lg_volume_down received command ON
then
  publish("broker", "broadlink/audio/lg/volumedown", "replay")
end
